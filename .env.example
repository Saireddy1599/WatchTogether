# ==============================================
# WatchTogether Environment Configuration
# ==============================================
# Copy this file to .env and fill in your actual values
# DO NOT commit .env file with your actual secrets to version control

# ==============================================
# Google Cloud Platform (GCP) Configuration
# ==============================================

# Your GCP Project ID
# Get this from: https://console.cloud.google.com/
# Click on project name at top to see Project ID
GCP_PROJECT_ID=your-gcp-project-id

# Your GCP Service Account Key (JSON format)
# Get this from: GCP Console → IAM & Admin → Service Accounts
# Create service account with "Cloud Run Admin" and "Storage Admin" roles
# Download JSON key and paste its contents here (as a single line)
GCP_SA_KEY={"type":"service_account","project_id":"your-project",...}

# GCP Region for Cloud Run deployment
# Common options: us-central1, us-east1, us-west1, europe-west1
# Full list: https://cloud.google.com/compute/docs/regions-zones
GCP_REGION=us-central1

# Vertex AI Model Resource Name
# Format: projects/PROJECT_ID/locations/REGION/publishers/google/models/MODEL_NAME
# Example: projects/your-project/locations/us-central1/publishers/google/models/text-bison@001
VERTEX_MODEL=projects/your-project/locations/us-central1/publishers/google/models/text-bison@001

# ==============================================
# Firebase Configuration
# ==============================================

# Firebase Service Account JSON
# Get this from: Firebase Console → Project Settings → Service Accounts
# Click "Generate New Private Key" and paste the JSON contents here (as a single line)
FIREBASE_SERVICE_ACCOUNT={"type":"service_account","project_id":"your-project",...}

# ==============================================
# Application Security Configuration
# ==============================================

# JWT Secret for signing tokens
# Generate a secure random string (recommended: 32+ characters)
# You can generate one with: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
JWT_SECRET=your-super-secure-jwt-secret-key-here

# Client API Key for development/testing
# This is used for client authentication during development
# Generate a random string or use the default for local development
CLIENT_API_KEY=local-dev-key

# ==============================================
# External API Configuration (Optional)
# ==============================================

# OpenAI API Key (optional - for fallback AI model)
# Get this from: https://platform.openai.com/account/api-keys
# Only needed if you want to use OpenAI as fallback when Vertex AI is unavailable
OPENAI_API_KEY=sk-your-openai-api-key-here

# ==============================================
# Development Configuration
# ==============================================

# Server port (optional, defaults to 3001)
PORT=3001

# Default AI model (optional, defaults to gpt-5-mini)
DEFAULT_MODEL=gpt-5-mini

# Upstream URL for testing (optional)
UPSTREAM_URL=https://api.openai.com/v1/responses